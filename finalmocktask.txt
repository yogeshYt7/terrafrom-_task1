#provider.tf
provider "aws" {
  region     = "ap-south-1"
  access_key = "YOUR_ACCESS_KEY"
  secret_key = "YOUR_SECRET_KEY"
}

****************************
#app_ec2.tf
resource "aws_instance" "app_server" {
  ami           = "ami-xxxxxxxxxxx"
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.public_subnet.id
  user_data     = file("nginx.sh")
}
*************************
#nginx.sh
#!/bin/bash
sudo yum update -y
sudo yum install nginx -y`	
sudo systemctl start nginx
sudo systemctl enable nginx

*************************
#db_ec2.tf 
resource "aws_instance" "db_server" {
  ami           = "ami-xxxxxxxxxxxxxxxx"
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.private_subnet.id
  user_data     = file("mysql.sh")
}

**************************
#mysql.sh
 #!/bin/bash
 sudo yum update -y
 sudo yum install mysql-server -y
 sudo systemctl start mysqld
 sudo systemctl enable mysqld

*************************
#vpc.tf 
resource "aws_vpc" "main" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_support   = true
  enable_dns_hostnames = true
}

*************************
#subnet.tf (public_subnet& private_subnet)
resource "aws_subnet" "public_subnet" {
  vpc_id                  = aws_vpc.main.id
  cidr_block              = "10.0.1.0/24"
  availability_zone       = "ap-south-1a"
  map_public_ip_on_launch = true
}

resource "aws_subnet" "private_subnet" {
  vpc_id            = aws_vpc.main.id
  cidr_block        = "10.0.2.0/24"
  availability_zone = "ap-south-1a"
}
*************************
#routetable 
resource "aws_route_table" "public_routetable" {
  vpc_id = aws_vpc.main.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.main.id
  }
}

resource "aws_route_table_association" "public_subnet_association" {
  subnet_id      = aws_subnet.public_subnet.id
  route_table_id = aws_route_table.public_routetable.id
}

resource "aws_route_table" "private_routetable" {
  vpc_id = aws_vpc.main.id
}

*************************
#gateway.tf
resource "aws_internet_gateway" "main" {
  vpc_id = aws_vpc.main.id
}

resource "aws_nat_gateway" "main" {
  allocation_id = aws_eip.main.id
  subnet_id     = aws_subnet.public_subnet.id
}

resource "aws_eip" "main" {
  domain = "vpc"
}

*************************
#security.tf(app_server & db_server)
resource "aws_security_group" "app_server_sg" {
  name        = "app_server_sg"
  description = "Security group for app server"
  vpc_id      = aws_vpc.main.id

}

resource "aws_security_group" "db_server_sg" {
  name        = "db_server_sg"
  description = "Security group for db server"
  vpc_id      = aws_vpc.main.id

}
*************************
#output.tf
output "app_server_public_ip" {
  value = aws_instance.app_server.public_ip
}

output "db_server_public_ip" {
  value = aws_instance.db_server.public_ip
}

output "app_server_public_dns" {
  value = aws_instance.app_server.public_dns
}
